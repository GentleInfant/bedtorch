% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io.R
\name{check_binaries}
\alias{check_binaries}
\title{normalize_table <- function(dt) {
v_chrom <- as.character(dt$chrom)
chrom_list <- str_sort(unique(v_chrom), numeric = TRUE)
dt\link{, chrom := factor(v_chrom, levels = chrom_list)}
dt\link[=, `:=`(start = as.integer(start), end = as.integer(end))]{, \verb{:=}(start = as.integer(start), end = as.integer(end))}
data.table::setkey(dt, "chrom", "start", "end")
dt
}
Check if required binaries exist in PATH}
\usage{
check_binaries(binaries = "tabix", verbose = FALSE, stop_on_fail = FALSE)
}
\arguments{
\item{binaries}{Character vector indicating what binaries to check. Default
is tabix.}

\item{verbose}{Logical value indicating whether to output detailed messages.
Default is FALSE.}

\item{stop_on_fail}{Stop the script completely if the result is \code{FALSE}.}
}
\value{
Logical value. TRUE if all required binaries can be found in PATH.
}
\description{
Some of cragr's functionalities require certain third-party binaries to exist
in PATH. For example, selectively loading cfDNA fragments from a certain
region under the hood invokes tabix to complete the task. This function checks
whether certain binaries exist.
}
